外观模式介绍
外观模式就是统一接口封装，将子系统的逻辑、交互隐藏起来，为用户提供一个高层次的接口，使得系统更加易用。
同时也对外隐藏了具体的实现，这样即使具体的子系统发生了变化，用户也不会感知到。
因为用户使用的是Facade高层接口，内部的变化对于用户来说并不可见。
这样一来就将变化隔离开来，使得系统也更为灵活。

总结
外观模式是使用频率较高的设计模式，它的精髓就在于“封装”二字。
通过一个高层次结构为用户提供统一的API入口，使得用户通过一个类型就基本能够操作整个系统，这样减少了用户的使用成本，也能够提升系统的灵活性。

优点：
    1）对客户程序隐藏子系统细节，因而减少了客户对于子系统的耦合，能够拥抱变化。
    2）外观类对子系统的接口封装，使得系统更易于使用。

缺点：
    1）外观类接口膨胀。由于子系统的接口都有外观类统一对外暴露，使得外观类的API接口较多，在一定程度上增加了用户使用成本。
    2）外观类没有遵循开闭原则，当业务出现变更时，可能需要直接修改外观类。